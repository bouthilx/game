[project]
name = "jeux-papa"
version = "0.1.0"
description = "A 2D RPG game in Python"
requires-python = ">=3.8"
dependencies = [
    "pygame>=2.5.0",
]


[tool.hatch.build.targets.wheel]
packages = ["game"]

[tool.ruff]
target-version = "py38"
line-length = 88
extend-exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "B027",  # Empty methods in abstract base class - acceptable for optional lifecycle methods
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["game"]

[tool.coverage.run]
source = ["game"]
omit = [
    "*/tests/*",
    "*/test_*",
    "create_sample_map.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "coverage>=7.0",
    "tox>=4.0",
]
dev = [
    "ruff>=0.1.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
]
